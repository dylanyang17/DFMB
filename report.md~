## debug

注意行列索引定义不同!!!

## 液滴的处理

(!!!!!!!注意初始化，可写在reset中)

首先要定义一个数组 nowDrop[][]，表示某个格子当前的液滴标号（标号从1开始），为0表示没有液滴。再定义一个颜色QList\<\> dropColor，用于给出每个标号液滴的颜色。另外还要定义QMap\<int,bool\> histDrop[][]，用于标记每个格子被哪些液滴经过。

dropCnt 表示至今出现过的液滴种类数。

## 指令的处理

首先通过文件读入，认为每一行有一个指令。用一个结构体来表示指令，opt表示指令类型，arg[0]~arg[5]为6个参数。

opt值对应的指令为，Move为1，Split为2，Merge为3，Input为4，Output为5，而Mix拆分为若干Move进行处理。

具体参数如下：

```
args:          0  1  2  3  4  5
Move(op==1):   x1,y1,x2,y2       (从1移动至2)
Split(op==2):  x1,y1,x2,y2,x3,y3 (由1分成2、3)
Merge(op==3):  x1,y1,x2,y2       (将1、2合并到中间位置)
Input(op==4):  x1,y1             (输入到1位置)
Output(op==5): x1,y1             (由1位置输出)
```

注意在t时刻的操作，将在t+1时刻被观测到。

### Split和Merge

这两个指令跨了两个时刻，所以需要小心处理。

加入两个数组：bool notAlone[][] 来标记不单独画出某个格子的水滴；QPoint midState[][] 来标记中间结点，第一个参数为液滴标号，第二个参数为0表示非中间结点，为1表示水平中间结点，2表示垂直中间结点。

对于Split：在第一个时刻执行后，在两侧放上nowDrop，但是设定notAlone[][]来不单独画出这两个水滴，另外在中间加上midState[][]状态，并且将中间点的nowDrop置零。于是在第二个时刻只用清零midState和notAlone即可。

对于Merge：
